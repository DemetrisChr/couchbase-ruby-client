#!/usr/bin/env bash

#    Copyright 2020 Couchbase, Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

set -x
set -e

cbdyncluster info
cbdyncluster ps -a

CB_VERSION=${CB_VERSION:-6.5.1}
CB_RUBY_VERSION=${CB_RUBY_VERSION:-2.7.1}

extra_options=$(ruby -e 'print "--enable-developer-preview" if ENV["CB_VERSION"] =~ /^6\.5/')

CLUSTER_ID=$(cbdyncluster allocate --num-nodes=3 --server-version=${CB_VERSION})
SERVICES="kv,index,n1ql,fts"
cbdyncluster setup ${CLUSTER_ID} \
    --bucket=default \
    --storage-mode=plasma \
    ${extra_options} \
    --node=${SERVICES} \
    --node=${SERVICES} \
    --node=${SERVICES}
sleep 30

if [ "$(uname -s)" = "Linux" ]
then
  source /usr/local/share/chruby/chruby.sh
fi
if [ "$(uname -s)" = "Darwin" ]
then
  source $(brew --prefix chruby)/share/chruby/chruby.sh
fi
chruby ruby-${CB_RUBY_VERSION}

FIRST_NODE=$(cbdyncluster ips ${CLUSTER_ID} | ruby -e 'puts STDIN.read.split(",")[0]')
curl -sS -u Administrator:password http://${FIRST_NODE}:8093/query/service \
     -d 'statement=CREATE PRIMARY INDEX ON `default` USING GSI'
sleep 30

export COUCHBASE_BACKEND_LOG_LEVEL=info
# CB_TEST_NAME=test_exists_allows_to_check_document_existence

if [ ! -z $CB_TEST_NAME ]
then
  export TESTOPTS="--name='/^${CB_TEST_NAME}$/'"
fi
export TEST_SERVER_VERSION=${CB_VERSION}
export TEST_DEVELOPER_PREVIEW=yes
export TEST_CONNECTION_STRING=$(cbdyncluster connstr ${CLUSTER_ID})
set +e

echo "${PWD}/core.%h.%e.%t" | sudo tee /proc/sys/kernel/core_pattern
ulimit -c unlimited

gem install minitest-reporters

cat <<EOF > Rakefile
require "rake/testtask"

Rake::TestTask.new(:test) do |t|
  t.libs << "test"
  t.test_files = FileList["test/**/*_test.rb"]
end
EOF

rake test
STATUS=$?
set -e

cbdyncluster rm ${CLUSTER_ID}

date
for i in "${PWD}/core*"
do
   if [ -f $i ]
   then
     echo $i
     file $i
     gdb $(bundle exec which ruby) $i --batch -ex "thread apply all bt"
   fi
done

exit ${STATUS}
