#!/usr/bin/env bash

#  Copyright 2020-2021 Couchbase, Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

CB_HOST=${CB_HOST:-localhost}
CB_PORT=${CB_PORT:-8091}
CB_USERNAME=${CB_USERNAME:-Administrator}
CB_PASSWORD=${CB_PASSWORD:-password}
CB_BUCKET=${CB_BUCKET:-default}
CB_SERVER_QUOTA=${CB_SERVER_QUOTA:-512}
CB_BUCKET_QUOTA=${CB_BUCKET_QUOTA:-100}
CB_DEVELOPER_PREVIEW=${CB_DEVELOPER_PREVIEW:-no}
CB_BEER_SAMPLE=${CB_BEER_SAMPLE:-no}
CB_TRAVEL_SAMPLE=${CB_TRAVEL_SAMPLE:-no}

CB_CREDS="${CB_USERNAME}:${CB_PASSWORD}"

sleep 1

set -ex

# Ping cluster
curl -sS http://${CB_HOST}:${CB_PORT}/pools

# Initialize Node
curl -sS -w "\n" -u ${CB_CREDS} http://${CB_HOST}:${CB_PORT}/nodes/self/controller/settings \
     -d 'path=%2Fopt%2Fcouchbase%2Fvar%2Flib%2Fcouchbase%2Fdata' \
     -d 'index_path=%2Fopt%2Fcouchbase%2Fvar%2Flib%2Fcouchbase%2Fdata'

# Setup Memory Quotas
curl -sS -w "\n" -u ${CB_CREDS} http://${CB_HOST}:${CB_PORT}/pools/default \
  -d "memoryQuota=${CB_SERVER_QUOTA}" \
  -d 'indexMemoryQuota=256'

# Setup Services
curl -sS -w "\n" -u ${CB_CREDS} http://${CB_HOST}:${CB_PORT}/node/controller/setupServices \
     -d 'services=kv%2Cn1ql%2Cindex%2Cfts%2Ccbas'

# Setup Administrator username and password
curl -sS -w "\n" -u ${CB_CREDS} http://${CB_HOST}:${CB_PORT}/settings/web \
     -d "password=${CB_PASSWORD}" \
     -d "username=${CB_USERNAME}" \
     -d "port=SAME"

# Setup index settings
curl -sS -w "\n" -u ${CB_CREDS} http://${CB_HOST}:${CB_PORT}/settings/indexes \
     -d "storageMode=plasma"

# Setup Bucket
curl -sS -w "\n" -u ${CB_CREDS} http://${CB_HOST}:${CB_PORT}/pools/default/buckets \
     -d 'flushEnabled=1' \
     -d 'threadsNumber=3' \
     -d 'replicaIndex=0' \
     -d 'replicaNumber=0' \
     -d 'evictionPolicy=valueOnly' \
     -d "ramQuotaMB=${CB_BUCKET_QUOTA}" \
     -d 'bucketType=membase' \
     -d "name=${CB_BUCKET}"

if [ "x${CB_BEER_SAMPLE}" != "xno" ]; then
curl -sS -w "\n" -u ${CB_CREDS} http://${CB_HOST}:${CB_PORT}/sampleBuckets/install \
     -d '["beer-sample"]'
fi

if [ "x${CB_TRAVEL_SAMPLE}" != "xno" ]; then
curl -sS -w "\n" -u ${CB_CREDS} http://${CB_HOST}:${CB_PORT}/sampleBuckets/install \
     -d '["travel-sample"]'
fi

if [ "x${CB_DEVELOPER_PREVIEW}" != "xno" ]; then
curl -sS -w "\n" -u ${CB_CREDS} http://${CB_HOST}:${CB_PORT}/settings/developerPreview \
     -d "enabled=true"
fi

sleep 2

QUERY_PORT=
while [ "x${QUERY_PORT}" = "x" ]
do
    sleep 1
    QUERY_PORT=$(curl -sS -w '\n' -u ${CB_CREDS} http://${CB_HOST}:${CB_PORT}/pools/default/b/${CB_BUCKET} | ruby -rjson -e 'puts JSON.parse(STDIN.read)["nodesExt"][0]["services"]["n1ql"]')
done

curl -sS -w "\n" -u ${CB_CREDS} http://${CB_HOST}:${QUERY_PORT}/query/service \
     -d "statement=CREATE PRIMARY INDEX ON \`${CB_BUCKET}\` USING GSI"

